---

- name: Reset Kubernetes component with docker
  shell: "kubeadm reset --force --cri-socket=/var/run/{{ container_runtime }}.sock"
  when: container_runtime == "docker"
  register: reset_cluster

- name: Join to Kubernetes cluster with docker
  when: reset_cluster is succeeded
  shell: |
    kubeadm join --token {{ token }} \
                --discovery-token-unsafe-skip-ca-verification \
                --cri-socket=/var/run/{{ container_runtime }}.sock \
                {{ master_ip }}:6443
  when: container_runtime == "docker"
  register: join_cluster
  # See: https://github.com/jetstack/cert-manager/issues/2640 with using kubeadm + calico + cert-manager
  environment:
    no_proxy: "$no_proxy,.svc,.svc.cluster.local"
  notify:
    - Recreate kube-dns

- name: Reset Kubernetes component with other cri
  shell: "kubeadm reset --force --cri-socket=/var/run/{{ container_runtime }}/{{ container_runtime }}.sock"
  when: container_runtime == "containerd" or  container_runtime == "crio" 
  register: reset_cluster

- name: Join to Kubernetes cluster with other cri
  when: reset_cluster is succeeded
  shell: |
    kubeadm join --token {{ token }} \
                --discovery-token-unsafe-skip-ca-verification \
                --cri-socket=/var/run/{{ container_runtime }}/{{ container_runtime }}.sock \
                {{ master_ip }}:6443
  when: container_runtime == "containerd" or  container_runtime == "crio"
  register: join_cluster
  # See: https://github.com/jetstack/cert-manager/issues/2640 with using kubeadm + calico + cert-manager
  environment:
    no_proxy: "$no_proxy,.svc,.svc.cluster.local"
  notify:
    - Recreate kube-dns
